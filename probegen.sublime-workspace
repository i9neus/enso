{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"val",
				"validityCoeffs"
			],
			[
				"SH",
				"SHCoeffs"
			],
			[
				"data",
				"dataOctahedralDepth"
			],
			[
				"num",
				"numElements"
			],
			[
				"auto",
				"automaton"
			],
			[
				"Vec",
				"Vector3f"
			],
			[
				"Vectr",
				"Vector2f"
			],
			[
				"kNum",
				"kNumElements"
			],
			[
				"kNu",
				"kNumIterations"
			],
			[
				"adaptiveE",
				"adaptiveEfficiency"
			],
			[
				"kModel",
				"kModelMass"
			],
			[
				"is",
				"isDebug"
			],
			[
				"Model",
				"ModelType"
			],
			[
				"rin",
				"ringBufferBit"
			],
			[
				"ring",
				"ringBuffer"
			],
			[
				"uint",
				"uint16_t"
			],
			[
				"kMod",
				"kModelMinMass"
			],
			[
				"k",
				"kModelMinMass"
			],
			[
				"elemet",
				"elementidx"
			],
			[
				"chara",
				"character"
			],
			[
				"0x",
				"0x80000000"
			],
			[
				"bits",
				"bitsPerSymbol"
			],
			[
				"frequen",
				"frequencyTable"
			],
			[
				"print",
				"printModel"
			],
			[
				"kM",
				"kModelPrecision"
			],
			[
				"Gener",
				"GenerateNormalisedGaussianKernel1D"
			],
			[
				"m_",
				"m_Model"
			],
			[
				"bitPla",
				"bitPlanes"
			],
			[
				"message",
				"messageList"
			],
			[
				"packed",
				"packedMessageLength"
			],
			[
				"alphab",
				"alphabet"
			],
			[
				"alp",
				"alphabet"
			],
			[
				"Test",
				"TestResult"
			],
			[
				"alphabe",
				"alphabetVariance"
			],
			[
				"alph",
				"alphabetLength"
			],
			[
				"under",
				"underflowDepth"
			],
			[
				"score",
				"scores"
			],
			[
				"com",
				"computeDisagreementScore"
			],
			[
				"dis",
				"disagreementScore"
			],
			[
				"current",
				"currentElement"
			],
			[
				"compute",
				"computeMeanVariance"
			],
			[
				"issue",
				"issueDescriptions"
			],
			[
				"members",
				"memberList"
			],
			[
				"group",
				"groupIdxA"
			],
			[
				"grou",
				"groupList"
			],
			[
				"RgbTo",
				"RgbToYuv"
			],
			[
				"m_co",
				"m_colourSpaceTransform"
			],
			[
				"grey",
				"grey_lambert"
			],
			[
				"active",
				"activeCameraId"
			],
			[
				"emis",
				"emissive_lambert"
			],
			[
				"m_row",
				"m_rowDataOffset"
			],
			[
				"max",
				"m_MaxPoolSizeElements"
			],
			[
				"scene",
				"sceneContext"
			],
			[
				"ext",
				"extantRay"
			],
			[
				"inc",
				"incidentIntersection"
			],
			[
				"incid",
				"incidentRay"
			],
			[
				"gre",
				"grey_lambert"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "import matplotlib.pyplot as plt\nimport json\nimg = plt.imread(\"encoded.png\")\n\nprint(\"Loded image: {} x {} x {}\\n\".format(len(img), len(img[0]), len(img[0][0])))\n\ngridX = gridY = gridZ = 10\nnumProbes = gridX * gridY * gridZ\nprobeIdx = 0\ncoeffIdx = 0\nsh = []\nvalidityCoeffs = []\nprobeCoeffs = []\n\nfor row in img:\n\tfor pixel in row:\n\t\t\n\t\tmantissa = float(int((int(pixel[0] * 255.0) << 8) | int(pixel[1] * 255.0)) - 0x7fff) / float(0x7fff)\n\t\texponent = float(int(pixel[2] * 255.0) - 0x7f)\n\t\tvalue = mantissa * pow(2.0, exponent)\n\n\t\tif coeffIdx < 12:\n\t\t\tsh.append(value)\t\n\t\t\t#print(\"{}: [{},{},{}] -> [{},{}] -> {}\".format(probeIdx, pixel[0], pixel[1], pixel[2], mantissa, exponent, value))\t\n\t\telif coeffIdx == 27:\n\t\t\tsh.append(value)\n\t\t\t#print(\"{}: [{},{},{}] -> [{},{}] -> {}\".format(probeIdx, pixel[0], pixel[1], pixel[2], mantissa, exponent, value))\t\n\t\t\n\t\tif coeffIdx == 29:\n\t\t\tprobeCoeffs.extend([sh[0], sh[1], sh[2], sh[3], sh[6], sh[9], sh[4], sh[7], sh[10], sh[5], sh[8], sh[11]])\n\t\t\tsh.clear()\n\t\t\tprobeIdx += 1\n\t\t\tcoeffIdx = 0\n\t\telse:\t\n\t\t\tcoeffIdx += 1\n\n\t\tif probeIdx == numProbes:\n\t\t\tbreak\n\tif probeIdx == numProbes:\n\t\tbreak\n\njsonDict = {\n\t\"description\": \"\",\n\t\"sampleNum\": 0,\n\t\"size\":\n\t{\n\t\t\"x\": 1.0, \"y\": 1.0, \"z\":1.0\n\t},\n\t\"resolution\":\n\t{\n\t\t\"x\": gridX, \"y\": gridY, \"z\": gridZ\n\t},\n\t\"coefficients\": probeCoeffs,\n\t\"dataValidity\": validityCoeffs\n}\n\nwith open('data.json', 'w') as jsonFile:\n    json.dump(jsonDict, jsonFile, indent=4)\n\nprint(\"Done! Exported {} of {} probes.\".format(probeIdx, numProbes))\n",
			"file": "decoder/decoder.py",
			"file_size": 1565,
			"file_write_time": 132639217689605963,
			"settings":
			{
				"buffer_size": 1505,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"package",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/projects/probegen"
	],
	"file_history":
	[
		"/C/projects/probegen/decoder/data.json",
		"/C/projects/probegen/decoder/decoder.py",
		"/C/scratch/synthetic geometry/data/probes.json",
		"/C/scenes/ML Probe Volumes/Assets/Scenes/Cornell/ProbeVolume1-0.asset",
		"/C/scenes/ML Probe Volumes/Assets/Scenes/SampleScene/ProbeVolume-0.asset",
		"/C/projects/unity/commits.txt",
		"/C/scratch/shadertoy/shaders.json",
		"/C/projects/pt/scenes/codec/block.h",
		"/C/projects/pt/scenes/codec/block2.h",
		"/C/projects/scratch/common.glsl",
		"/C/projects/scratch/math.h",
		"/C/projects/scratch/main.cpp",
		"/C/projects/pt/src/generic/AdaptiveBinaryCoder.h",
		"/C/projects/scratch/image.glsl",
		"/C/projects/scratch/buffer B.glsl",
		"/C/projects/scratch/dump.txt",
		"/C/projects/pt/scenes/codec/histogram.dat",
		"/C/projects/pt/src/generic/ArithmeticCoder.h",
		"/C/projects/pt/scenes/codec/encoder.dat",
		"/C/projects/scratch/ArithmeticCoder.h",
		"/C/projects/pt/src/generic/ShadertoyArithmeticCoder.h",
		"/C/projects/pt/src/generic/ArithmeticCoderUtils.h",
		"/C/projects/scratch/data/rca.csv",
		"/C/projects/pt/src/math/Math.h",
		"/C/Users/ben.spencer/Documents/Mongoose/weather.htm",
		"/C/Users/ben.spencer/Downloads/Lighting Team RCA Map - Scratchpad.csv",
		"/C/projects/pt/src/main.cpp",
		"/C/projects/pt/src/math/BBox3.h",
		"/C/projects/pt/src/math/Vector.h",
		"/C/projects/pt/src/generic/ColourUtils.h",
		"/C/projects/pt/src/generic/thirdparty/sobol/Sobol.h",
		"/C/projects/pt/src/generic/FNVHash.h",
		"/C/projects/pt/CMakeLists.txt",
		"/C/projects/pt/build/output.vcxproj",
		"/C/projects/openexr/OpenEXR/CMakeLists.txt",
		"/C/projects/openexr/CMakeLists.txt",
		"/C/projects/pt/src/generic/FilesystemUtils.cpp",
		"/C/projects/pt/src/generic/FilesystemUtils.h",
		"/C/projects/pt/src/renderer/AssetContainer.h",
		"/C/projects/pt/src/renderer/AssetFactory.h",
		"/C/projects/pt/src/renderer/BVHBuilder.cpp",
		"/C/projects/pt/src/renderer/BxDF.cpp",
		"/C/projects/pt/src/renderer/BxDF.h",
		"/C/projects/pt/src/renderer/TextureShader.h",
		"/C/projects/pt/src/renderer/Emitter.cpp",
		"/C/projects/pt/src/renderer/TextureShader.cpp",
		"/C/projects/pt/src/renderer/EnvironmentLight.cpp",
		"/C/projects/unity/Editor/Src/GI/Progressive/ScratchpadMemoryPool.h",
		"/C/projects/pt/src/renderer/Emitter.h",
		"/C/projects/scratch/ScratchpadMemoryPool.h",
		"/C/projects/pt/src/generic/TinySVG.h",
		"/C/projects/pt/src/math/EnvironmentPDF2.h",
		"/C/projects/pt/src/math/PDF2.h",
		"/C/projects/pt/src/generic/StdHeaders.h",
		"/C/projects/pt/src/generic/Interpolate.h",
		"/C/projects/pt/src/image/ImageFactory.h",
		"/C/projects/pt/src/renderer/EnvironmentLight.h",
		"/C/projects/pt/src/renderer/Mesh.cpp",
		"/C/projects/pt/src/renderer/PathTracer.cpp",
		"/C/projects/pt/src/renderer/PathTracer.h",
		"/C/projects/pt/src/math/SphericalHarmonics.h",
		"/C/projects/pt/src/math/SphericalHarmonics.cpp",
		"/C/projects/gittest/FileA.txt",
		"/C/projects/gittest/FileB.txt",
		"/C/projects/pt/src/renderer/Ray.h",
		"/C/projects/pt/src/renderer/Renderer.cpp",
		"/C/projects/pt/src/renderer/Tracable.cpp",
		"/C/projects/pt/src/renderer/Camera.cpp",
		"/C/projects/pt/src/renderer/Camera.h",
		"/C/projects/pt/src/generic/thirdparty/base64/Base64.cpp",
		"/C/projects/pt/src/generic/JsonUtils.cpp",
		"/C/projects/pt/src/image/ImageContainer.cpp",
		"/C/projects/pt/src/image/ImageContainer.h",
		"/C/projects/unity/gi-docs/view.cmd",
		"/C/projects/pt/src/image/ImageIO.h",
		"/C/projects/pt/src/generic/JsonUtils.h",
		"/C/projects/unity/Editor/Src/GI/Progressive/PVRLightmapBakeHeavyData.cpp",
		"/C/projects/toy_path_tracer/src/generic/FloatPairMuxer.h",
		"/C/projects/pt/scenes/ffmpeg.txt",
		"/C/projects/pt/src/renderer/Renderer.h",
		"/C/projects/pt/src/image/DecomposedImageFilePath.h",
		"/C/projects/pt/src/image/DecomposedImageFilePath.cpp",
		"/C/projects/pt/src/renderer/Scene.cpp",
		"/C/projects/pt/src/generic/Assert.h",
		"/C/projects/pt/src/renderer/Tracable.h",
		"/C/projects/pt/src/renderer/VolumeSampleCache.cpp",
		"/C/projects/pt/src/image/Image.h",
		"/C/projects/pt/src/generic/Tbb.h",
		"/C/projects/pt/src/math/Statistic.h",
		"/C/projects/pt/src/generic/thirdparty/eigen/src/Core/MathFunctionsImpl.h",
		"/C/projects/pt/src/generic/thirdparty/eigen/src/Core/MathFunctions.h",
		"/C/projects/pt/src/image/AbstractImage.h",
		"/C/projects/pt/src/image/AbstractImage.cpp",
		"/C/projects/pt/src/renderer/Sampler.h",
		"/C/projects/pt/src/generic/StringUtils.h",
		"/C/projects/unity/adaptive-sampling-redux.patch",
		"/C/projects/pt/patch.patch",
		"/C/projects/unity/adaptive-sampling-redux.patch.txt",
		"/C/projects/unity/adaptive-sampling-redux.txt",
		"/C/projects/pt/build/ALL_BUILD.vcxproj",
		"/C/projects/cuda/main.cu",
		"/E/backup/projects/igneus/scenes/prism.xml",
		"/C/projects/pt/src/renderer/Scene.h",
		"/C/projects/pt/src/image/ImageIO.cpp",
		"/C/scratch/GFXGI-67/pixmap.txt",
		"/C/scratch/GFXGI-67/pixmap.ppm",
		"/C/projects/pt/scenes/debug.svg",
		"/C/scratch/1211198/log.txt",
		"/C/projects/pt/src/math/SphericalPDF2.h",
		"/C/projects/scratch/data/convergence.txt",
		"/C/scratch/GFXGI-51/stats.svg",
		"/C/scratch/GFXGI-62/log.txt",
		"/C/mathematica/noise function.nb",
		"/C/projects/fftw/CMakeLists.txt",
		"/C/Users/ben.spencer/AppData/Roaming/Microsoft/VisualStudio/16.0_844a13c8/ActivityLog.xml",
		"/C/Users/ben.spencer/AppData/Local/MiKTeX/2.9/miktex/log/dvipng.log",
		"/C/projects/scratch/data/histogram.txt",
		"/C/projects/scratch/data/genome.txt",
		"/C/projects/cuda/main.cpp",
		"/C/projects/pt/src/generic/thirdparty/eigen/Eigen/Core",
		"/C/projects/pt/scenes/cornell.json",
		"/C/projects/pt/src/math/CDF2.cpp",
		"/C/projects/pt/build/pt.sln",
		"/C/projects/boost/filesystem/config.hpp",
		"/C/projects/boost/filesystem.hpp",
		"/C/projects/pt/src/renderer/VolumetricMedium.h",
		"/C/projects/pt/src/generic/PtrGuard.h",
		"/C/projects/pt/src/renderer/VolumeSampleCache.h"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			"C:\\projects\\pt\\src",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"row",
			"intRng",
			"buffer",
			".y",
			".x",
			".0",
			".5",
			"5,",
			"0,",
			"            ",
			"                ",
			"               ",
			"              ",
			"             ",
			"            ",
			"           ",
			"          ",
			"         ",
			"        ",
			"            ",
			"                ",
			"               ",
			"              ",
			"             ",
			"            ",
			" \n",
			",  ",
			" , ",
			" x^2",
			"`",
			", .",
			"+ ",
			"fstream",
			"kAutomataNumCells",
			"kModelTableOff",
			"lighting/",
			"testRaySphe",
			"kImageSize",
			"512",
			"            ",
			"           ",
			"          ",
			"         ",
			"        ",
			"            ",
			"halfsize",
			"decoded",
			"adaptiveEncoded",
			"shannonEntropy",
			"kJMax",
			"here;",
			"packBit",
			"ModelBits",
			"Bits",
			"unpackLastBits",
			"buildTestMessage",
			"Bytes",
			"m_lut",
			"ModelLUT",
			"singleton",
			"ModelLut",
			"modelLut",
			"Bits",
			"std::array<uint32_t",
			"unpackLastByte",
			"msgIdx",
			"msgBitIdx",
			"msgIdx",
			"bitIdx",
			"0",
			"packBit(",
			"packBit",
			"0x8000",
			"printModel(",
			"0x8000",
			"alphabet",
			"Hi",
			"j0",
			"j1",
			"iRange",
			"Range: ",
			"%s (%f)",
			"i0: %s (%f)",
			"f:  %s (%f)",
			"errorBit",
			"a",
			"bitsPerSymbol",
			"frequencies",
			"alphabet",
			"removed",
			"kModelMass",
			"modelPass",
			"sumMass",
			"i",
			"testResults",
			"messageList",
			"TestResult",
			"element.",
			"printMo",
			"element.",
			"sumNormMassGtMin",
			"kModelPrecision",
			"kModelPr",
			"kModelPrecis",
			"kModelPrecision",
			"0.02",
			"it->",
			"it-",
			"it->",
			"runTestSu",
			"debug",
			"message",
			"messageLength",
			"100",
			"intRng",
			"buildTestMessage",
			"intRng",
			"1 << precision",
			"k",
			"getPackedMe",
			"kPI",
			"ArithmeticCo",
			"Arithmet",
			"m_debug",
			"uint16_t",
			"true",
			".\"); ",
			".length"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"SHRGB<3>",
			"-100",
			"-1",
			"0",
			"",
			"PT_ASSERT",
			"math::min",
			"math::max",
			"PT_ASSERT"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "decoder/decoder.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1505,
						"regions":
						{
						},
						"selection":
						[
							[
								996,
								996
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "/C/projects/scratch/scratch.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"math",
				"C:\\projects\\scratch\\math.h"
			],
			[
				"arith",
				"ArithmeticCoder.h"
			],
			[
				"ar",
				"ArithmeticCoder.h"
			],
			[
				"shad",
				"C:\\projects\\pt\\src\\generic\\ShadertoyArithmeticCoder.h"
			],
			[
				"",
				"math.h"
			],
			[
				"main",
				"C:\\projects\\scratch\\main.cpp"
			],
			[
				"base",
				"src\\generic\\thirdparty\\base64\\Base64.cpp"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"spher",
				"src\\math\\SphericalHarmonics.h"
			],
			[
				"render",
				"src\\renderer\\Renderer.cpp"
			],
			[
				"camera",
				"src\\renderer\\Camera.cpp"
			],
			[
				"col",
				"src\\generic\\ColourUtils.h"
			],
			[
				"camer",
				"src\\renderer\\Camera.h"
			],
			[
				"camea",
				"src\\renderer\\Camera.h"
			],
			[
				"scene",
				"src\\renderer\\Scene.cpp"
			],
			[
				"ren",
				"src\\renderer\\Renderer.cpp"
			],
			[
				"path",
				"src\\renderer\\PathTracer.cpp"
			],
			[
				"vec",
				"src\\math\\Vector.h"
			],
			[
				"colo",
				"src\\generic\\ColourUtils.h"
			],
			[
				"vector",
				"src\\math\\Vector.h"
			],
			[
				"stat",
				"src\\math\\Statistic.h"
			],
			[
				"mathf",
				"src\\generic\\thirdparty\\eigen\\src\\Core\\MathFunctionsImpl.h"
			],
			[
				"tbb",
				"src\\generic\\Tbb.h"
			],
			[
				"std",
				"src\\generic\\StdHeaders.h"
			],
			[
				"patht",
				"src\\renderer\\PathTracer.cpp"
			],
			[
				"envir",
				"src\\renderer\\EnvironmentLight.cpp"
			],
			[
				"container",
				"src\\renderer\\AssetContainer.h"
			],
			[
				"bxdf",
				"src\\renderer\\BxDF.h"
			],
			[
				"emitter",
				"src\\renderer\\Emitter.h"
			],
			[
				"bxd",
				"src\\renderer\\BxDF.h"
			],
			[
				"rendere",
				"src\\renderer\\Renderer.cpp"
			],
			[
				"tex",
				"src\\renderer\\TextureShader.cpp"
			],
			[
				"image",
				"src\\image\\ImageIO.cpp"
			],
			[
				"trac",
				"src\\renderer\\Tracable.h"
			],
			[
				"assetco",
				"src\\renderer\\AssetContainer.h"
			],
			[
				"samp",
				"src\\renderer\\Sampler.h"
			],
			[
				"enviro",
				"src\\renderer\\EnvironmentLight.cpp"
			],
			[
				"env",
				"src\\renderer\\EnvironmentLight.cpp"
			],
			[
				"mai",
				"src\\main.cpp"
			],
			[
				"fnvha",
				"src\\generic\\FNVHash.h"
			],
			[
				"sobol",
				"src\\generic\\thirdparty\\sobol\\Sobol.h"
			],
			[
				"tiny",
				"src\\generic\\TinySVG.h"
			],
			[
				"imageio",
				"src\\image\\ImageIO.cpp"
			],
			[
				"pathtr",
				"src\\renderer\\PathTracer.cpp"
			],
			[
				"mat",
				"src\\math\\Math.h"
			],
			[
				"envi",
				"src\\renderer\\EnvironmentLight.cpp"
			],
			[
				"emitt",
				"src\\renderer\\Emitter.h"
			],
			[
				"en",
				"src\\renderer\\EnvironmentLight.cpp"
			],
			[
				"cdf2",
				"src\\math\\PDF2.h"
			],
			[
				"pdf2",
				"src\\math\\PDF2.h"
			],
			[
				"sam",
				"src\\renderer\\Sampler.h"
			],
			[
				"inter",
				"src\\generic\\Interpolate.h"
			],
			[
				"pdf",
				"src\\math\\PDF2.h"
			],
			[
				"imagefac",
				"src\\image\\ImageFactory.h"
			],
			[
				"image.h",
				"src\\image\\Image.h"
			],
			[
				"cdf",
				"src\\math\\CDF2.h"
			],
			[
				"sampler",
				"src\\renderer\\Sampler.h"
			],
			[
				"bx",
				"src\\renderer\\BxDF.h"
			],
			[
				"tra",
				"src\\renderer\\Tracable.h"
			],
			[
				"renderer",
				"src\\renderer\\PathTracer.cpp"
			],
			[
				"pat",
				"src\\renderer\\PathTracer.cpp"
			],
			[
				"emi",
				"src\\renderer\\Emitter.h"
			],
			[
				"ray",
				"src\\renderer\\Ray.h"
			],
			[
				"sa",
				"src\\renderer\\Sampler.h"
			],
			[
				"sampe",
				"src\\renderer\\Sampler.h"
			],
			[
				"stdh",
				"src\\generic\\StdHeaders.h"
			],
			[
				"sinys",
				"src\\generic\\TinySVG.h"
			],
			[
				"tinys",
				"src\\generic\\TinySVG.h"
			],
			[
				"vect",
				"src\\math\\Vector.h"
			],
			[
				"mesh",
				"src\\renderer\\Mesh.cpp"
			],
			[
				"asset",
				"src\\renderer\\AssetFactory.h"
			],
			[
				"abs",
				"src\\image\\AbstractImage.h"
			],
			[
				"imagecon",
				"src\\image\\ImageContainer.h"
			],
			[
				"imagecont",
				"src\\image\\ImageContainer.h"
			],
			[
				"ImageIO",
				"src\\image\\ImageIO.cpp"
			],
			[
				"asse",
				"src\\renderer\\AssetFactory.h"
			],
			[
				"em",
				"src\\renderer\\Emitter.cpp"
			],
			[
				"ray.h",
				"src\\renderer\\Ray.h"
			],
			[
				"pathr",
				"src\\renderer\\PathTracer.cpp"
			],
			[
				"envc",
				"src\\renderer\\EnvironmentLight.cpp"
			],
			[
				"ra",
				"src\\renderer\\Ray.h"
			],
			[
				"pathtra",
				"src\\renderer\\PathTracer.cpp"
			],
			[
				"emit",
				"src\\renderer\\Emitter.cpp"
			],
			[
				"cmakel",
				"CMakeLists.txt"
			],
			[
				"image ",
				"src\\image\\Image.h"
			],
			[
				"traca",
				"src\\renderer\\Tracable.h"
			],
			[
				"rend",
				"src\\renderer\\Renderer.cpp"
			],
			[
				"assert",
				"src\\renderer\\AssetFactory.h"
			],
			[
				"corne",
				"scenes\\cornell.json"
			],
			[
				"file",
				"src\\generic\\FilesystemUtils.cpp"
			],
			[
				"re",
				"src\\renderer\\Renderer.cpp"
			],
			[
				"abst",
				"src\\image\\AbstractImage.cpp"
			],
			[
				"dec",
				"src\\image\\DecomposedImageFilePath.cpp"
			],
			[
				"filesys",
				"src\\generic\\FilesystemUtils.cpp"
			],
			[
				"cmakeli",
				"CMakeLists.txt"
			],
			[
				"string",
				"src\\generic\\StringUtils.h"
			],
			[
				"abstra",
				"src\\image\\AbstractImage.h"
			],
			[
				"imagefiel",
				"src\\image\\ImageFilePathManager.h"
			],
			[
				"scene.cpp",
				"src\\renderer\\Scene.cpp"
			],
			[
				"abstr",
				"src\\image\\AbstractImage.h"
			],
			[
				"coloru",
				"src\\generic\\ColourUtils.h"
			],
			[
				"basis",
				"src\\math\\Basis.h"
			],
			[
				"iamgeio",
				"src\\image\\ImageIO.cpp"
			],
			[
				"iamge.h",
				"src\\image\\Image.h"
			],
			[
				"stdhead",
				"src\\generic\\StdHeaders.h"
			],
			[
				"math.h",
				"src\\math\\Math.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 255.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
