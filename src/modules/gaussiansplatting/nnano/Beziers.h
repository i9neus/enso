#include "core/math/Math.cuh"

namespace Enso
{
    namespace FlowBeziers
    {
        static constexpr int kNumPaths = 3;
        static constexpr int kNumSplines = 80;
        static constexpr int kNumCoeffs = 160;
        static constexpr int kNumBVHLeaves = 80;
        static constexpr int kNumBVHFlags = 2;
        static constexpr int kBVHInnerSpan = 64;
        static constexpr int kBVHDepth = 8;

        static const vec3 kPoints[kNumCoeffs] = 
        {
            vec3(-0.00944874, 0.0854192, -0.301694), vec3(0.0264437, 0.0527282, 0.105814), vec3(-0.0128678, 0.0665217, -0.225723), vec3(0.000337802, 0.105616, 0.184986), vec3(-0.0145774, 0.0407861, -0.172069), vec3(-0.0127154, 0.106291, 0.290939), vec3(-0.0179967, 0.0116313, -0.145861), vec3(-0.0388212, 0.0808603, 0.384515),
            vec3(-0.00246857, -0.0308096, -0.152226), vec3(-0.0391493, 0.00406949, 0.426554), vec3(-0.00285031, -0.0357467, -0.185504), vec3(-0.0240385, -0.0742292, 0.391474), vec3(-0.00304137, -0.0414473, -0.224101), vec3(-0.0164828, -0.122306, 0.293206), vec3(-0.00342292, -0.04753, -0.26859), vec3(-0.00137186, -0.155272, 0.154418),
            vec3(0.00470015, -0.0546982, -0.319543), vec3(0.0026652, -0.158952, -0.00222597), vec3(0.00791813, -0.0452979, -0.369541), vec3(0.0166097, -0.153622, -0.158513), vec3(0.00952633, -0.0294616, -0.406921), vec3(0.0235822, -0.120402, -0.295525), vec3(0.0127447, -0.010409, -0.426856), vec3(0.0375266, -0.073238, -0.392345),
            vec3(-0.00580685, 0.0548923, -0.42452), vec3(0.0582685, 0.00660694, -0.428057), vec3(-0.0110374, 0.0432786, -0.375435), vec3(0.0189215, 0.123144, -0.363181), vec3(-0.0136532, 0.0212039, -0.343194), vec3(-0.000749968, 0.160988, -0.221116), vec3(-0.0188836, -0.00610239, -0.335643), vec3(-0.0400953, 0.159488, -0.0608779),
            vec3(-0.00948873, -0.0411335, -0.360629), vec3(-0.0379622, 0.0743517, 0.0585148), vec3(0.00906515, -0.060111, -0.411251), vec3(-0.0215493, -0.00157278, 0.0949043), vec3(0.0183419, -0.0419807, -0.462297), vec3(-0.0133428, -0.0446715, 0.0717821), vec3(0.036896, -0.00529687, -0.485936), vec3(0.00307012, -0.071357, 0.0137679),
            vec3(0.0117973, 0.0705395, -0.454337), vec3(0.0473259, -0.0671633, -0.054519), vec3(0.000809044, 0.0941341, -0.372), vec3(0.0212077, 0.0274884, -0.0743565), vec3(-0.00751425, 0.0821358, -0.277057), vec3(0.00858301, 0.0599631, -0.0256604), vec3(-0.000898741, 0.0671073, -0.202435), vec3(-0.000999453, 0.0771291, 0.0428856),
            vec3(-0.00635381, 0.0659601, -0.136227), vec3(0.00407749, 0.0758783, 0.119015), vec3(0.00156278, 0.0532525, -0.0766204), vec3(-0.00400891, 0.0840333, 0.198971), vec3(-0.0166035, 0.0583662, -0.0218051), vec3(-0.00596296, 0.0786961, 0.278996), vec3(-0.0210284, 0.0251593, 0.0199576), vec3(-0.0281904, 0.0667702, 0.351729),
            vec3(-0.00780388, -0.0273448, 0.0240885), vec3(-0.0320364, 0.0168128, 0.390308), vec3(-0.0009837, -0.0429526, -0.0110602), vec3(-0.0179463, -0.0472602, 0.375085), vec3(0.00286421, -0.0447334, -0.0549965), vec3(-0.0102454, -0.0828073, 0.309878), vec3(0.0100573, -0.039005, -0.0968656), vec3(0.00453546, -0.103298, 0.216826),
            vec3(0.00504982, -0.0188918, -0.125813), vec3(0.00808211, -0.0942342, 0.118063), vec3(0.00625061, -0.00879214, -0.139655), vec3(0.011183, -0.07807, 0.0319111), vec3(0.00692004, 0.00370948, -0.142197), vec3(0.0127259, -0.0557099, -0.0349758), vec3(0.00812133, 0.0175496, -0.131567), vec3(0.0158147, -0.0302582, -0.0779599),
            vec3(-0.00640334, 0.0660504, -0.105896), vec3(0.0248133, 0.00268013, -0.0924034), vec3(-0.00932534, 0.0532437, -0.0462493), vec3(0.00508369, 0.0523068, -0.0649099), vec3(-0.010787, 0.0345934, -0.0023309), vec3(-0.00477873, 0.0624748, -0.00751947), vec3(-0.0137082, 0.0130195, 0.0214755), vec3(-0.0245069, 0.0529173, 0.0501765),
            vec3(-7.59792e-05, -0.0221225, 0.0207868), vec3(-0.0217348, 0.00599809, 0.0785869), vec3(0.00716283, -0.0222744, -0.00141166), vec3(-0.00521109, -0.0374715, 0.0628502), vec3(0.0107824, -0.00794875, -0.0165232), vec3(0.00305101, -0.0478937, 0.0201677), vec3(0.0180214, 0.013616, -0.0136896), vec3(0.0195749, -0.0417917, -0.024675),
            vec3(-0.00103113, 0.0291435, 0.0179478), vec3(0.0225816, -0.00155046, -0.0468918), vec3(-0.00632134, 0.0270812, 0.0460601), vec3(0.00552915, 0.0436127, -0.0258606), vec3(-0.00896654, 0.0144385, 0.06682), vec3(-0.00299695, 0.0546712, 0.0232812), vec3(-0.0142567, -0.00349454, 0.072292), vec3(-0.0200493, 0.0486773, 0.0749555),
            vec3(0.00499193, -0.0429731, 0.0545407), vec3(-0.0295541, 0.0115175, 0.103583), vec3(0.00923843, -0.0329892, 0.0165595), vec3(-0.00698922, -0.0475908, 0.0855468), vec3(0.0113621, -0.0145124, -0.00719127), vec3(0.00429319, -0.0615692, 0.0309667), vec3(0.0156083, 0.00821176, -0.0103416), vec3(0.0268581, -0.0529828, -0.0263093),
            vec3(-0.00455814, 0.0580504, 0.0134784), vec3(0.0169638, 0.0010797, -0.052434), vec3(-0.00439751, 0.0489342, 0.0669707), vec3(0.00638631, 0.0350074, -0.0343905), vec3(-0.00431723, 0.0401395, 0.111507), vec3(0.00109844, 0.0477804, 0.00700319), vec3(-0.00415605, 0.031505, 0.14733), vec3(-0.00947856, 0.0499773, 0.055882),
            vec3(-0.00155382, -0.0110068, 0.174679), vec3(-0.00483955, -0.0387754, 0.0963808), vec3(0.00275376, -0.0141144, 0.162118), vec3(0.00323464, -0.0484545, 0.0527659), vec3(0.00490714, -0.00860695, 0.150757), vec3(0.00727174, -0.0419852, 0.00754604), vec3(0.00921501, 0.00120732, 0.147058), vec3(0.0153461, -0.0274418, -0.0271675),
            vec3(0.004523, 0.0146516, 0.15748), vec3(0.0146863, 0.00242514, -0.0392632), vec3(-0.000560537, 0.0236976, 0.176654), vec3(0.00269484, 0.0317978, -0.0221517), vec3(-0.00310236, 0.0225765, 0.199792), vec3(-0.00330106, 0.0371874, 0.012341), vec3(-0.0081859, 0.0163718, 0.219266), vec3(-0.0152926, 0.0305853, 0.0462273),
            vec3(-0.00223858, -2.11283e-08, 0.227452), vec3(-0.0146136, -4.28054e-09, 0.0615199), vec3(0.00153235, -0.0044772, 0.225213), vec3(-0.00272019, -0.0292271, 0.0469064), vec3(0.00341807, -0.00141254, 0.222268), vec3(0.00322643, -0.0346677, 0.0149591), vec3(0.00718875, 0.00542358, 0.224274), vec3(0.0151197, -0.0282149, -0.0164822),
            vec3(-0.00883962, 0.0467246, 0.236886), vec3(0.0244524, 0.00477744, -0.0295774), vec3(-0.00815139, 0.0290453, 0.274771), vec3(0.00332425, 0.0536823, -0.000347529), vec3(-0.00780714, 0.0127424, 0.295665), vec3(-0.00724107, 0.06033, 0.056659), vec3(-0.00711892, -0.00287189, 0.3006), vec3(-0.0283704, 0.0458479, 0.109748),
            vec3(0.0133783, -0.017886, 0.290609), vec3(-0.0042702, -0.0113872, 0.127225), vec3(0.00742103, 0.00887059, 0.286102), vec3(0.00124884, -0.0199276, 0.111568), vec3(0.00444214, 0.0237126, 0.302393), vec3(0.00400843, -0.0174298, 0.0928893), vec3(-0.00151529, 0.0325969, 0.330548), vec3(0.00952761, -0.00941299, 0.0794679),
            vec3(-0.00226634, 0.037307, 0.361629), vec3(0.00910461, 0.0121667, 0.0795825), vec3(-0.000149287, 0.0327743, 0.39667), vec3(0.00527834, 0.0303759, 0.100854), vec3(0.000909054, 0.0324757, 0.429295), vec3(0.00336549, 0.0409325, 0.136508), vec3(0.00302629, 0.0342938, 0.46268), vec3(-0.000461016, 0.0476635, 0.180806)
        };
        const int kPathOffsets[3] = { 56, 64, 80 };

        const float kSplineLengths[80] =  
        {
            0.110684, 0.118954, 0.0973726, 0.04556, 0.0509232, 0.105637, 0.14575, 0.16473, 0.164103, 0.142032, 0.098888, 0.0379041, 0.0849821, 0.145935, 0.160608, 0.122995, 0.0658019, 0.0576228, 0.0639176, 0.0778797, 0.0891646, 0.107238, 0.101539, 0.100892, 0.0998236, 0.0970197, 0.0841332, 0.0407063, 0.041479, 0.0788111, 0.102114
            , 0.103031, 0.0872833, 0.067021, 0.0446481, 0.0311546, 0.0672619, 0.0725201, 0.0625934, 0.0301635, 0.0292028, 0.0455432, 0.0453739, 0.0414868, 0.0368094, 0.0535452, 0.0522002, 0.0361635, 0.0451915, 0.0598773, 0.0577207, 0.0392364, 0.0573482, 0.0609635, 0.0606471, 0.0488804, 0.0453876, 0.0466378, 0.034993, 0.0187041, 0.0261725
            , 0.0415495, 0.0390883, 0.0173457, 0.014784, 0.0320992, 0.0315746, 0.0203086, 0.0499345, 0.0609267, 0.0534772, 0.0243622, 0.0181291, 0.0250631, 0.0313532, 0.031563, 0.0413165, 0.0483749, 0.0554745, 0.0601932 
        };

        const float kCumulativeSplineLengths[80] =
        {
            0.021245, 0.0440774, 0.0627673, 0.0715122, 0.0812866, 0.101563, 0.129539, 0.161157, 0.192656, 0.219918, 0.238899, 0.246174, 0.262486, 0.290497, 0.321325, 0.344933, 0.357563, 0.368623, 0.380892, 0.39584, 0.412955, 0.433538, 0.453028, 0.472394, 0.491554, 0.510176, 0.526325, 0.534138, 0.5421, 0.557227, 0.576827
            , 0.596603, 0.613357, 0.626221, 0.634791, 0.640771, 0.653681, 0.667601, 0.679615, 0.685405, 0.69101, 0.699752, 0.708461, 0.716424, 0.72349, 0.733767, 0.743787, 0.750728, 0.759402, 0.770895, 0.781974, 0.789505, 0.800513, 0.812214, 0.823855, 0.833238, 0.841949, 0.850901, 0.857618, 0.861208, 0.866232
            , 0.874207, 0.88171, 0.885039, 0.887877, 0.894038, 0.900098, 0.903996, 0.913581, 0.925276, 0.93554, 0.940216, 0.943696, 0.948507, 0.954525, 0.960583, 0.968513, 0.977798, 0.988446, 1.
        };

        const float kPathLengths[3] = { 4.45176, 0.269878, 0.598935 };
        static constexpr float kSumSplineLengths = 5.20988;

    }
}